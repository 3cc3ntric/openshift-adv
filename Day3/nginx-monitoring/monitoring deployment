---
apiVersion: v1
kind: Namespace
metadata:
  name: monitoring
  labels:
    openshift.io/cluster-monitoring: "true"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus-sa
  namespace: monitoring
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: monitoring
data:
  prometheus.yml: |
    global:
      scrape_interval: 5s
    scrape_configs:
      - job_name: 'metrics-generator'
        static_configs:
          - targets: ['metrics-generator.monitoring.svc.cluster.local:8080']
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      serviceAccountName: prometheus-sa
      containers:
        - name: prometheus
          image: prom/prometheus
          args:
            - "--config.file=/etc/prometheus/prometheus.yml"
          ports:
            - containerPort: 9090
          volumeMounts:
            - name: config-volume
              mountPath: /etc/prometheus
      volumes:
        - name: config-volume
          configMap:
            name: prometheus-config
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: monitoring
spec:
  ports:
    - port: 9090
      targetPort: 9090
  selector:
    app: prometheus
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: prometheus
  namespace: monitoring
spec:
  to:
    kind: Service
    name: prometheus
  port:
    targetPort: 9090
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
        - name: grafana
          image: grafana/grafana
          ports:
            - containerPort: 3000
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: monitoring
spec:
  ports:
    - port: 3000
      targetPort: 3000
  selector:
    app: grafana
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: grafana
  namespace: monitoring
spec:
  to:
    kind: Service
    name: grafana
  port:
    targetPort: 3000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: metrics-generator
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: metrics-generator
  template:
    metadata:
      labels:
        app: metrics-generator
    spec:
      containers:
        - name: metrics-generator
          image: nginx:latest
          ports:
            - containerPort: 8080
          volumeMounts:
            - name: metrics-config
              mountPath: /etc/nginx/conf.d
      volumes:
        - name: metrics-config
          configMap:
            name: metrics-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: metrics-config
  namespace: monitoring
data:
  default.conf: |
    server {
      listen 8080;
      location /metrics {
        stub_status on;
        access_log /var/log/nginx/access.log;
      }
    }
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: metrics-monitor
  namespace: monitoring
spec:
  selector:
    matchLabels:
      app: metrics-generator
  endpoints:
    - port: http
      path: /metrics
      interval: 5s
