apiVersion: apps/v1
kind: Deployment
metadata:
  name: velero
  namespace: velero
spec:
  replicas: 1
  selector:
    matchLabels:
      app: velero
  template:
    metadata:
      labels:
        app: velero
    spec:
      serviceAccountName: velero-sa
      securityContext:
        runAsNonRoot: true
      volumes:
        - name: velero-storage
          emptyDir: {}
      containers:
        - name: velero
          image: velero/velero:v1.15.2
          command:
            - /velero
          args:
            - server
          volumeMounts:
            - mountPath: /backups
              name: velero-storage
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            capabilities:
              drop: ["ALL"]
            seccompProfile:
              type: RuntimeDefault

---

apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: velero-node-agent
  namespace: velero
spec:
  selector:
    matchLabels:
      component: node-agent
  template:
    metadata:
      labels:
        component: node-agent
    spec:
      serviceAccountName: velero-sa
      containers:
      - name: velero
        image: velero/velero:v1.15.2
        command:
          - /velero
        args:
          - node-agent
        securityContext:
          runAsUser: 1000
          allowPrivilegeEscalation: false
          capabilities:
            drop: ["ALL"]
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /var/lib/kubelet/pods
          name: host-pods
          mountPropagation: HostToContainer
      volumes:
      - name: host-pods
        hostPath:
          path: /var/lib/kubelet/pods
          type: DirectoryOrCreate